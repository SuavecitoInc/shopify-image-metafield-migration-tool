/* eslint-disable eslint-comments/disable-enable-pair */
/* eslint-disable eslint-comments/no-unlimited-disable */
/* eslint-disable */
import type * as AdminTypes from './admin.types';

export type UpdateProductMetafieldsMutationVariables = AdminTypes.Exact<{
  metafields: Array<AdminTypes.MetafieldsSetInput> | AdminTypes.MetafieldsSetInput;
}>;


export type UpdateProductMetafieldsMutation = { metafieldsSet?: AdminTypes.Maybe<{ metafields?: AdminTypes.Maybe<Array<(
      Pick<AdminTypes.Metafield, 'key' | 'namespace' | 'value' | 'createdAt' | 'updatedAt'>
      & { owner: { __typename: 'AppInstallation' | 'Article' | 'Blog' | 'CartTransform' | 'Collection' | 'Company' | 'CompanyLocation' | 'Customer' | 'CustomerSegmentMember' | 'DeliveryCustomization' | 'DiscountAutomaticNode' | 'DiscountCodeNode' | 'DiscountNode' | 'DraftOrder' | 'FulfillmentConstraintRule' | 'GiftCardCreditTransaction' | 'GiftCardDebitTransaction' | 'Image' | 'Location' | 'Market' } | { __typename: 'MediaImage' | 'Order' | 'Page' | 'PaymentCustomization' | 'ProductVariant' | 'SellingPlan' | 'Shop' | 'Validation' } | (
        { __typename: 'Product' }
        & Pick<AdminTypes.Product, 'id' | 'title' | 'handle'>
        & { variants: { edges: Array<{ node: Pick<AdminTypes.ProductVariant, 'id' | 'title' | 'sku'> }> } }
      ) }
    )>>, userErrors: Array<Pick<AdminTypes.MetafieldsSetUserError, 'field' | 'message' | 'code'>> }> };

export type UpdateVariantMetafieldsMutationVariables = AdminTypes.Exact<{
  metafields: Array<AdminTypes.MetafieldsSetInput> | AdminTypes.MetafieldsSetInput;
}>;


export type UpdateVariantMetafieldsMutation = { metafieldsSet?: AdminTypes.Maybe<{ metafields?: AdminTypes.Maybe<Array<(
      Pick<AdminTypes.Metafield, 'key' | 'namespace' | 'value' | 'createdAt' | 'updatedAt'>
      & { owner: { __typename: 'AppInstallation' | 'Article' | 'Blog' | 'CartTransform' | 'Collection' | 'Company' | 'CompanyLocation' | 'Customer' | 'CustomerSegmentMember' | 'DeliveryCustomization' | 'DiscountAutomaticNode' | 'DiscountCodeNode' | 'DiscountNode' | 'DraftOrder' | 'FulfillmentConstraintRule' | 'GiftCardCreditTransaction' | 'GiftCardDebitTransaction' | 'Image' | 'Location' | 'Market' } | { __typename: 'MediaImage' | 'Order' | 'Page' | 'PaymentCustomization' | 'Product' | 'SellingPlan' | 'Shop' | 'Validation' } | (
        { __typename: 'ProductVariant' }
        & Pick<AdminTypes.ProductVariant, 'id' | 'title' | 'sku'>
      ) }
    )>>, userErrors: Array<Pick<AdminTypes.MetafieldsSetUserError, 'field' | 'message' | 'code'>> }> };

export type ProductQueryVariables = AdminTypes.Exact<{
  id: AdminTypes.Scalars['ID']['input'];
}>;


export type ProductQuery = { product?: AdminTypes.Maybe<(
    Pick<AdminTypes.Product, 'id' | 'title' | 'handle'>
    & { defaultLifestyleImage1?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, defaultLifestyleImage2?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, defaultLifestyleImage3?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, defaultLifestyleImage4?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, defaultLifestyleImage5?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, defaultLifestyleImage6?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, defaultLifestyleImage7?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, defaultLifestyleImage8?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, variants: { edges: Array<{ node: (
          Pick<AdminTypes.ProductVariant, 'id' | 'title' | 'sku'>
          & { variantImage1?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, variantImage2?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, variantImage3?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, variantImage4?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, variantImage5?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, variantImage6?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, variantImage7?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, variantImage8?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, variantLifestyleImage1?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, variantLifestyleImage2?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, variantLifestyleImage3?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, variantLifestyleImage4?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>> }
        ) }> } }
  )> };

export type ProductsQueryVariables = AdminTypes.Exact<{
  first: AdminTypes.Scalars['Int']['input'];
  after?: AdminTypes.InputMaybe<AdminTypes.Scalars['String']['input']>;
}>;


export type ProductsQuery = { products: { pageInfo: Pick<AdminTypes.PageInfo, 'hasNextPage' | 'hasPreviousPage' | 'endCursor' | 'startCursor'>, edges: Array<{ node: (
        Pick<AdminTypes.Product, 'id' | 'title' | 'handle'>
        & { defaultLifestyleImage1?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, defaultLifestyleImage2?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, defaultLifestyleImage3?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, defaultLifestyleImage4?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, defaultLifestyleImage5?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, defaultLifestyleImage6?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, defaultLifestyleImage7?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, defaultLifestyleImage8?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, variants: { edges: Array<{ node: (
              Pick<AdminTypes.ProductVariant, 'id' | 'title' | 'sku'>
              & { variantImage1?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, variantImage2?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, variantImage3?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, variantImage4?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, variantImage5?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, variantImage6?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, variantImage7?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, variantImage8?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, variantLifestyleImage1?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, variantLifestyleImage2?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, variantLifestyleImage3?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>>, variantLifestyleImage4?: AdminTypes.Maybe<Pick<AdminTypes.Metafield, 'value'>> }
            ) }> } }
      ) }> } };

interface GeneratedQueryTypes {
  "#graphql\n  query Product($id: ID!) {\n    product(id: $id) {\n      id\n      title\n      handle\n      defaultLifestyleImage1: metafield(\n        namespace: \"debut\"\n        key: \"default_lifestyle_image_1\"\n      ) {\n        value\n      }\n      defaultLifestyleImage2: metafield(\n        namespace: \"debut\"\n        key: \"default_lifestyle_image_2\"\n      ) {\n        value\n      }\n      defaultLifestyleImage3: metafield(\n        namespace: \"debut\"\n        key: \"default_lifestyle_image_3\"\n      ) {\n        value\n      }\n      defaultLifestyleImage4: metafield(\n        namespace: \"debut\"\n        key: \"default_lifestyle_image_4\"\n      ) {\n        value\n      }\n      defaultLifestyleImage5: metafield(\n        namespace: \"debut\"\n        key: \"default_lifestyle_image_5\"\n      ) {\n        value\n      }\n      defaultLifestyleImage6: metafield(\n        namespace: \"debut\"\n        key: \"default_lifestyle_image_6\"\n      ) {\n        value\n      }\n      defaultLifestyleImage7: metafield(\n        namespace: \"debut\"\n        key: \"default_lifestyle_image_7\"\n      ) {\n        value\n      }\n      defaultLifestyleImage8: metafield(\n        namespace: \"debut\"\n        key: \"default_lifestyle_image_8\"\n      ) {\n        value\n      }\n      variants(first: 250) {\n        edges {\n          node {\n            id\n            title\n            sku\n            variantImage1: metafield(namespace: \"debut\", key: \"variant_image_1\") {\n              value\n            }\n            variantImage2: metafield(namespace: \"debut\", key: \"variant_image_2\") {\n              value\n            }\n            variantImage3: metafield(namespace: \"debut\", key: \"variant_image_3\") {\n              value\n            }\n            variantImage4: metafield(namespace: \"debut\", key: \"variant_image_4\") {\n              value\n            }\n            variantImage5: metafield(namespace: \"debut\", key: \"variant_image_5\") {\n              value\n            }\n            variantImage6: metafield(namespace: \"debut\", key: \"variant_image_6\") {\n              value\n            }\n            variantImage7: metafield(namespace: \"debut\", key: \"variant_image_7\") {\n              value\n            }\n            variantImage8: metafield(namespace: \"debut\", key: \"variant_image_8\") {\n              value\n            }\n            variantLifestyleImage1: metafield(namespace: \"debut\", key: \"variant_lifestyle_image_1\") {\n              value\n            }\n            variantLifestyleImage2: metafield(namespace: \"debut\", key: \"variant_lifestyle_image_2\") {\n              value\n            }\n            variantLifestyleImage3: metafield(namespace: \"debut\", key: \"variant_lifestyle_image_3\") {\n              value\n            }\n            variantLifestyleImage4: metafield(namespace: \"debut\", key: \"variant_lifestyle_image_4\") {\n              value\n            }\n          }\n        }\n      }\n    }\n  }\n": {return: ProductQuery, variables: ProductQueryVariables},
  "#graphql\n  query Products($first: Int!, $after: String) {\n    products(first: $first, after: $after) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        endCursor\n        startCursor\n      }\n      edges {\n        node {\n          id\n          title\n          handle\n          defaultLifestyleImage1: metafield(\n            namespace: \"debut\"\n            key: \"default_lifestyle_image_1\"\n          ) {\n            value\n          }\n          defaultLifestyleImage2: metafield(\n            namespace: \"debut\"\n            key: \"default_lifestyle_image_2\"\n          ) {\n            value\n          }\n          defaultLifestyleImage3: metafield(\n            namespace: \"debut\"\n            key: \"default_lifestyle_image_3\"\n          ) {\n            value\n          }\n          defaultLifestyleImage4: metafield(\n            namespace: \"debut\"\n            key: \"default_lifestyle_image_4\"\n          ) {\n            value\n          }\n          defaultLifestyleImage5: metafield(\n            namespace: \"debut\"\n            key: \"default_lifestyle_image_5\"\n          ) {\n            value\n          }\n          defaultLifestyleImage6: metafield(\n            namespace: \"debut\"\n            key: \"default_lifestyle_image_6\"\n          ) {\n            value\n          }\n          defaultLifestyleImage7: metafield(\n            namespace: \"debut\"\n            key: \"default_lifestyle_image_7\"\n          ) {\n            value\n          }\n          defaultLifestyleImage8: metafield(\n            namespace: \"debut\"\n            key: \"default_lifestyle_image_8\"\n          ) {\n            value\n          }\n          variants(first: 250) {\n            edges {\n              node {\n                id\n                title\n                sku\n                variantImage1: metafield(namespace: \"debut\", key: \"variant_image_1\") {\n                  value\n                }\n                variantImage2: metafield(namespace: \"debut\", key: \"variant_image_2\") {\n                  value\n                }\n                variantImage3: metafield(namespace: \"debut\", key: \"variant_image_3\") {\n                  value\n                }\n                variantImage4: metafield(namespace: \"debut\", key: \"variant_image_4\") {\n                  value\n                }\n                variantImage5: metafield(namespace: \"debut\", key: \"variant_image_5\") {\n                  value\n                }\n                variantImage6: metafield(namespace: \"debut\", key: \"variant_image_6\") {\n                  value\n                }\n                variantImage7: metafield(namespace: \"debut\", key: \"variant_image_7\") {\n                  value\n                }\n                variantImage8: metafield(namespace: \"debut\", key: \"variant_image_8\") {\n                  value\n                }\n                variantLifestyleImage1: metafield(namespace: \"debut\", key: \"variant_lifestyle_image_1\") {\n                  value\n                }\n                variantLifestyleImage2: metafield(namespace: \"debut\", key: \"variant_lifestyle_image_2\") {\n                  value\n                }\n                variantLifestyleImage3: metafield(namespace: \"debut\", key: \"variant_lifestyle_image_3\") {\n                  value\n                }\n                variantLifestyleImage4: metafield(namespace: \"debut\", key: \"variant_lifestyle_image_4\") {\n                  value\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n": {return: ProductsQuery, variables: ProductsQueryVariables},
}

interface GeneratedMutationTypes {
  "#graphql\n  mutation UpdateProductMetafields($metafields: [MetafieldsSetInput!]!,) {\n    metafieldsSet(metafields: $metafields) {\n      metafields {\n        key\n        namespace\n        value\n        createdAt\n        updatedAt\n        owner {\n          __typename\n          ... on Product {\n            id\n            title\n            handle\n            variants(first: 100) {\n              edges {\n                node {\n                  id\n                  title\n                  sku\n                }\n              }\n            }\n          }\n        }\n      }\n      userErrors {\n        field\n        message\n        code\n      }\n    }\n\n  }\n": {return: UpdateProductMetafieldsMutation, variables: UpdateProductMetafieldsMutationVariables},
  "#graphql\n  mutation UpdateVariantMetafields($metafields: [MetafieldsSetInput!]!,) {\n    metafieldsSet(metafields: $metafields) {\n      metafields {\n        key\n        namespace\n        value\n        createdAt\n        updatedAt\n        owner {\n          __typename\n          ... on ProductVariant {\n            id\n            title\n            sku\n          }\n        }\n      }\n      userErrors {\n        field\n        message\n        code\n      }\n    }\n\n  }\n": {return: UpdateVariantMetafieldsMutation, variables: UpdateVariantMetafieldsMutationVariables},
}
declare module '@shopify/admin-api-client' {
  type InputMaybe<T> = AdminTypes.InputMaybe<T>;
  interface AdminQueries extends GeneratedQueryTypes {}
  interface AdminMutations extends GeneratedMutationTypes {}
}
